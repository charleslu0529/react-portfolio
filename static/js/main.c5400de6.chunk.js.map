{"version":3,"sources":["components/LetterCube/LetterCube.module.scss","components/Navigation/Navigation.module.scss","components/Forthcoming/Forthcoming.module.scss","assets/images/KMLu.png","components/Logo/Logo.module.scss","components/Navigation/NavItems/NavItem/NavItem.module.scss","components/Navigation/NavItems/NavItems.module.scss","components/Container/Container.js","components/Logo/Logo.js","components/Navigation/Navigation.js","components/LetterCube/LetterCube.js","components/Forthcoming/Forthcoming.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","props","className","children","logo","classes","Logo","href","src","siteLogo","navigation","Container","Navigation","NavItemContainer","letterCube","Block","Block__Face","Block__Letter","letterOne","letterTwo","forthcoming","Word","LetterCube","index","App","Forthcoming","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,YAAc,gCAAgC,KAAO,yBAAyB,cAAgB,oC,gBCAlLD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,iBAAmB,uC,gBCAjFD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,KAAO,4B,kBCDpED,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,SAAW,6B,+HCOdC,G,MANG,SAACC,GAAD,OACd,yBAAKC,UAAWD,EAAMC,WACjBD,EAAME,Y,gCCQAC,EARF,SAACH,GAAD,OACT,yBAAKC,UAAWG,IAAQC,MACpB,uBAAGC,KAAK,KACJ,yBAAKC,IAAKC,S,4BCUPC,EAVI,SAACT,GAAD,OACf,kBAACU,EAAD,CAAWT,UAAWG,IAAQO,YAC1B,kBAACN,EAAD,MACA,yBAAKJ,UAAWG,IAAQQ,qB,gCCOjBC,EAdI,SAACb,GAChB,OACI,yBAAKC,UAAWG,IAAQU,OACpB,yBAAKb,UAAWG,IAAQW,aACpB,0BAAMd,UAAWG,IAAQY,eAAgBhB,EAAMiB,WAC/C,0BAAMhB,UAAWG,IAAQY,eAAgBhB,EAAMkB,WAC/C,0BAAMjB,UAAWG,IAAQY,eAAgBhB,EAAMiB,WAC/C,0BAAMhB,UAAWG,IAAQY,eAAgBhB,EAAMkB,WAC/C,0BAAMjB,UAAWG,IAAQY,mBCM1BG,EAbK,SAACnB,GAAD,OAChB,yBAAKC,UAAWG,IAAQM,WACpB,yBAAKT,UAAWG,IAAQgB,MACpB,kBAACC,EAAD,CAAYJ,UAAU,IAAIC,UAAU,IAAII,MAAM,MAC9C,kBAACD,EAAD,CAAYJ,UAAU,IAAIC,UAAU,IAAII,MAAM,MAC9C,kBAACD,EAAD,CAAYJ,UAAU,IAAIC,UAAU,IAAII,MAAM,MAC9C,kBAACD,EAAD,CAAYJ,UAAU,IAAIC,UAAU,IAAII,MAAM,MAC9C,kBAACD,EAAD,CAAYJ,UAAU,IAAIC,UAAU,IAAII,MAAM,MAC9C,kBAACD,EAAD,CAAYJ,UAAU,IAAIC,UAAU,IAAII,MAAM,SCO3CC,MAbf,WACE,OACE,yBAAKtB,UAAU,OACX,kBAACS,EAAD,KACI,kBAACC,EAAD,MACA,kBAACD,EAAD,KACI,kBAACc,EAAD,UCAIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c5400de6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"LetterCube_Block__3gNH2\",\"jump\":\"LetterCube_jump__CN46F\",\"Block__Face\":\"LetterCube_Block__Face__3BJja\",\"turn\":\"LetterCube_turn__3I2i2\",\"Block__Letter\":\"LetterCube_Block__Letter__RQ_eu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__ghYTd\",\"NavItemContainer\":\"Navigation_NavItemContainer__1Z2sz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Forthcoming_Container__CoC5Q\",\"Word\":\"Forthcoming_Word__3vNM4\"};","module.exports = __webpack_public_path__ + \"static/media/KMLu.ffe20925.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1yV7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavItem_NavItem__q_03U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavItems_NavItems__iuptP\"};","import React from 'react';\r\n\r\nconst container = (props) => (\r\n    <div className={props.className}>\r\n        {props.children}\r\n    </div>\r\n)\r\n\r\nexport default container;\r\n","import React from \"react\";\r\nimport siteLogo from \"../../assets/images/KMLu.png\";\r\nimport classes from \"./Logo.module.scss\";\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <a href=\"/\">\r\n            <img src={siteLogo} />\r\n        </a>\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from 'react';\r\nimport Logo from '../Logo/Logo';\r\nimport NavItems from './NavItems/NavItems';\r\nimport classes from './Navigation.module.scss';\r\nimport Container from '../Container/Container';\r\n\r\n\r\nconst navigation = (props) => (\r\n    <Container className={classes.Navigation}>\r\n        <Logo />\r\n        <div className={classes.NavItemContainer}>\r\n            {/* <NavItems /> */}\r\n        </div>\r\n    </Container>\r\n    \r\n)\r\n\r\nexport default navigation;\r\n","import React from \"react\";\r\nimport classes from \"./LetterCube.module.scss\";\r\n\r\nconst letterCube = (props) => {\r\n    return (\r\n        <div className={classes.Block}>\r\n            <div className={classes.Block__Face}>\r\n                <span className={classes.Block__Letter}>{props.letterOne}</span>\r\n                <span className={classes.Block__Letter}>{props.letterTwo}</span>\r\n                <span className={classes.Block__Letter}>{props.letterOne}</span>\r\n                <span className={classes.Block__Letter}>{props.letterTwo}</span>\r\n                <span className={classes.Block__Letter}></span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default letterCube;\r\n","import React from \"react\";\r\nimport classes from \"./Forthcoming.module.scss\";\r\nimport LetterCube from \"../LetterCube/LetterCube\";\r\n\r\nconst forthcoming = (props) => (\r\n    <div className={classes.Container}>\r\n        <div className={classes.Word}>\r\n            <LetterCube letterOne=\"C\" letterTwo=\"S\" index=\"6\" />\r\n            <LetterCube letterOne=\"O\" letterTwo=\"O\" index=\"5\" />\r\n            <LetterCube letterOne=\"M\" letterTwo=\"O\" index=\"4\" />\r\n            <LetterCube letterOne=\"I\" letterTwo=\"N\" index=\"3\" />\r\n            <LetterCube letterOne=\"N\" letterTwo=\".\" index=\"2\" />\r\n            <LetterCube letterOne=\"G\" letterTwo=\".\" index=\"1\" />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default forthcoming;\r\n","import React from 'react';\r\nimport Container from './components/Container/Container';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Forthcoming from \"./components/Forthcoming/Forthcoming\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Container>\r\n            <Navigation />\r\n            <Container>\r\n                <Forthcoming />\r\n            </Container>\r\n        </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}